import { getUsers } from "../../services/users";

class {
  onInput(input) {
    let users = [];
    let pageIndex = -1;

    const usersData = input.usersData;
    if (usersData) {
      users = usersData.users;
      pageIndex = usersData.pageIndex;
    }

    this.state = {
      loading: false,
      users: users,
      pageIndex: pageIndex
    };
  }

  onMount() {
    this.fetchPromise = Promise.resolve();

    if (this.state.users.length === 0) {
      this.loadMore();
    }
  }

  loadMore() {
    const state = this.state;
    state.loading = true;

    this.fetchPromise = this.fetchPromise
      .then(function() {
        return getUsers({
          pageIndex: ++state.pageIndex
        });
      })
      .then(function(usersData) {
        state.users = state.users.concat(usersData.users);
        state.loading = false;
      })
      .catch(function(e) {
        state.loading = false;
        console.log("Fetch failed:", e);
      });
  }

  handleLoadMoreClick() {
    this.loadMore();
  }

  onUpdate() {
    if (this.state.pageIndex > 0) {
      const tableContainer = this.getEl("tableContainer");
      tableContainer.scrollTop = tableContainer.scrollHeight;
    }
  }
}

<div.app-fetch-data>
  <div class="table-container" key="tableContainer">
    <if(state.users.length)>
      <table>
        <thead>
          <tr>
            <td>ID</td>
            <td>Avatar</td>
            <td>Name</td>
            <td>Email</td>
          </tr>
        </thead>

        <tbody>
          <for|user| of=state.users>
            <tr>
              <td>${user.id}</td>
              <td>
                <img src=user.avatar width=50 height=50/>
              </td>
              <td>${user.firstName} ${user.lastName}</td>
              <td>${user.email}</td>
            </tr>
          </for>
        </tbody>
      </table>
    </if>
  </div>

  <app-button
    label=(state.users.length ? "Load more users" : "Load users")
    onClick("handleLoadMoreClick")/>

  <span class=[state.loading ? "loading" : null]/>
</div>
